import type { NextPage } from "next";
import Head from "next/head";
import styles from "./index.module.css";
import matter from "gray-matter";
import Router from "next/router";
import BlogHeader from "../../components/BlogHeader";
import BlogBrief from "../../components/BlogBrief";
import BlogList, { IBlog } from "../../components/BlogList";
import BlogFooter from "../../components/BlogFooter";
import { GlobalContext } from "../../pages/_app";
import { useContext } from "react";
interface IHomeProps {
  blogTitle?: string;
  blogs?: IBlog[];
}

const contentPaths = require("../../content.json");

const Home: NextPage = (props: IHomeProps) => {
  const { theme, toggleTheme } = useContext(GlobalContext); // 获取当前主题状态

  const onRouterActicle = (item: IBlog) => {
    Router.push({
      pathname: `blogs/posts/${item.slug}`,
      query: { words: item.words, birthtimeMs: item.birthtimeMs },
    });
  };

  return (
    <div className={styles.homePageContainer}>
      <Head>
        <title>首页 | 钟子晨的博客</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/favicon.ico" />
      </Head>

      <div className={styles.homePage}>
        <main className={styles.main}>
          <BlogHeader
            isThemeLight={theme === "light"}
            onChange={toggleTheme}
            onClick={() => {
              Router.push({ pathname: `/blogs` });
            }}
          />
          <BlogBrief />
          {props.blogs && (
            <BlogList blogs={props.blogs} onClick={onRouterActicle} />
          )}
        </main>
        <BlogFooter />
      </div>
    </div>
  );
};

const timeToMS = (time: string) => {
  return new Date(time).valueOf();
};

Home.getInitialProps = async () => {
  const res = await Promise.all(
    contentPaths.map(async (item: IBlog) => {
      const content: any = await import(`../../content/${item.slug}.md`);
      const data = matter(content.default);
      return {
        ...item,
        ...data.data,
      };
    })
  );

  return {
    blogTitle: "Rookie for life!",
    blogs: res.sort(
      (a: IBlog, b: IBlog) => -timeToMS(a.date) + timeToMS(b.date)
    ),
  };
};

export default Home;
